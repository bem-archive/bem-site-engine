block('block')(
    content()(function () {
        var node = this.data.node,
            lang = this.data.lang,
            _source = node.source;

        return [apply('contents', { ctx: { source: _source, node: node, lang: lang } })];
    }),

    mode('contents')(function () {
        var _source = this.ctx.source,
            _data = _source.data,
            _examples = apply('examples'),
            tabsHeader = [],
            tabsContent = [];

        if (!_.isEmpty(_data)) {
            tabsHeader.push(apply('docs-header'));
            tabsContent.push(apply('docs-content'));
        }

        if (!_.isEmpty(_source.jsdoc)) {
            tabsHeader.push(apply('jsdoc-header'));
            tabsContent.push(apply('jsdoc-content'));
        }

        if (!_.isEmpty(_examples)) {
            tabsHeader.push(_examples.header);
            tabsContent.push(_examples.content);
        }

        if (!tabsHeader.length) {
            return {
                elem: 'message',
                content: [
                    {
                        block: 'post',
                        elem: 'title',
                        elemMods: { level: '1' },
                        content: BEM.I18N('block', 'warning-title')
                    },
                    {
                        block: 'post',
                        elem: 'content',
                        content: BEM.I18N('block', 'warning-text')
                    }
                ]
            };
        }

        return {
            block: 'tabs',
            mods: { theme: 'default' },
            content: [
                {
                    elem: 'header',
                    content: tabsHeader
                },
                {
                    elem: 'content',
                    content: tabsContent
                }
            ]
        };
    }),

    mode('docs-header')(function () {
        return {
            elem: 'tab',
            url: 'docs',
            mods: { 'side': 'left' },
            content: BEM.I18N('block', 'docs')
        };
    }),

    mode('docs-content')(function () {
        return {
            elem: 'pane',
            content: [
                {
                    block: this.block,
                    elem: 'title',
                    content: BEM.I18N('block', 'static-title') + ' ' + this.ctx.node.title[this.ctx.lang]
                },
                {
                    block: 'block-docs',
                    mix: { block: 'post', elem: 'content' }
                }
            ]
        };
    }),

    mode('jsdoc-header')(function () {
        return {
            elem: 'tab',
            url: 'jsdoc',
            content: BEM.I18N('block', 'jsdoc')
        };
    }),

    mode('jsdoc-content')(function () {
        return {
            elem: 'pane',
            content: {
                block: 'block-jsdoc',
                mix: { block: 'post', elem: 'content' }
            }
        };
    }),

    mode('examples')(
        function () {
            return {
                header: apply('examples-header'),
                content: apply('examples-content')
            };
        },

        match(function () {
            return !this.ctx.examples;
        })(function () {
            var data = this.ctx.source.data,
                examples,
                length;

            if (!data) {
                return false;
            }

            data = data[this.ctx.lang] || data;
            examples = data.examples;

            if (!examples || !examples.length) {
                return false;
            }

            length = examples.length;

            if (!examples[length - 1].content) {
                // new structure

                // filter not inline examples
                var defaultExamples = examples.filter(function (example) {
                    return example && !example.source;
                });

                if (!defaultExamples.length) return false;

                this.ctx = this.extend(this.ctx, { examples: defaultExamples });
                return applyNext();
            } else if (examples[length - 1].content.length) {
                // old structure
                this.ctx = this.extend(this.ctx, { examples: examples[length - 1].content });
                return applyNext();
            } else {
                return false;
            }
        })
    ),

    mode('examples-header')(function () {
        return {
            elem: 'tab',
            url: 'examples',
            mods: { 'side': 'right', 'examples': 'yes' },
            content: BEM.I18N('block', 'examples')
        };
    }),

    mode('examples-content')(function () {
        var source = this.ctx.source;
        return {
            elem: 'pane',
            content: this.ctx.examples.map(function (example) {
                return [
                    {
                        block: 'block-example',
                        mods: { view: 'default' },
                        builder: { enb: source.enb },
                        prefix: source.prefix,
                        example: example
                    }
                ];
            })
        };
    })
);
